server:
  port: 8081
spring:
  application:
    name: USER-SERVICE
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    password: root
    username: root
    url: jdbc:mysql://localhost/microservices?useSSL=false&allowMultiQueries=true&serverTimezone=UTC

  config:
    import: optional:configserver:http://localhost:8085

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-13465540.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorizationGrantType: client_credentials
            scope: internal
            clientId: <Your ClientID>
            clientSecret: <Your Secret>
        provider:
          okta:
            issuerUri: https://dev-13465540.okta.com/oauth2/default



#eureka:
 # instance:
  #  prefer-ip-address: true
  #client:
   # fetch-registry: true
    #register-with-eureka: true
    #service-url:
     # defaultZone: http://localhost:8761/eureka

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      ratingHotelBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
  retry:
    instances:
      ratingHotelService:
        maxAttempts: 3
        waitDuration: 2s

  ratelimiter:
    instances:
      userRateLimiter:
        limitRefreshPeriod: 4s
        limitForPeriod: 3
        timeoutDuration: 0s

okta:
  oauth2:
    issuer: https://dev-13465540.okta.com/oauth2/default
    audience: api://default
